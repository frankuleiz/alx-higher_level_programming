The ````0-add_integer`` module
===============================

Implementing ``add_integer`` function to add two numbers
-----------------------------------------------------

Importing the function from the module:
	>>> add_integer = __import__('0-add_integer').add_integer

checking for dcocstring:
	>>> m = (__import__('0-add_integer').__doc__
	>>> len(m) > 1
	True

checking for both positve numbers:
	>>> add_integer(6, 3)
	9

checking for both negative:
	>>> add_integer(-4, -3)
	-7

checking for positive with negative:
	>>> add_integer(6, -3)
	3

checking for negative with positive:
	>>> add_integer(-4, 5)
	1

checking for integer with string:
	>>> add_integer(5, "play")
	Traceback (most recent call last):
	TypeError: b must be an integer

checking for int with float:
	>>> add_integer(3, 6.3)
	9

checking for both floats:
	>>> add_integer(5.2, 3.1)
	8

checking for infinite:
	>>> add_integer(2, float("NaN"))
	Traceback (most recent call last):
	...
	ValueError: cannot convert float infinity to integer

checking for no arguments passed:
	>>> add_integer()
	Traceback (most recent call last):
	...
	TypeError: add_integer() missing 1 required positional arguement: 'a'

checking for float with Nan:
	>>> add_integer(4, float("Nan"))
	 Traceback (most recent call last):
	 ValueError: cannot convert float to NaN to integer

checking for a long int: 
	>>> add_integer(99999999999999999999, 1)
	100000000000000000000
